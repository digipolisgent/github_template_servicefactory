parameters:
- name: README
  description: These parameters are useful to quickly change some metadata. However, there are still things you MUST change in the template, like resource limits and container specs (environment)!
  value: FIRST
- name: NAME
  description: This is the component name which will be also visible in Openshift. Add a suffix like -api, -worker, -sync, -datafetch, ...
  value: test-api
- name: APP
  description: This is the application name of which the component is part of. For exemple the email-api is part of the notification application. 
  value: application-test
- name: NAMESPACE
  description: This is the namespace where the component will be deployed. The namespace correspondents with the business domain where the component or application is part of. The environment suffixes dv, qa or pr are allready provided where needed in the template with the ENV variable. 
  value: namespace
- name: ENV
  description: This is the environment suffix, i.e. dv, qa or pr.
  value: dv
- name: GITURI
  description: Git URI of the source code used for s2i builds
  value: git@github.com:digipolisgent/some_git-repo.git
- name: ARTIFACT_DIR
  description: Remove DOTNET_STARTUP_PROJECT when using this! The relative path to the target where JAR files are created for multi-module builds.
  value: src/target
- name: DOTNET_STARTUP_PROJECT
  description: Remove ARTIFACT_DIR when using this! Used to select the project to run. This must be the folder in the source repository containing the project file.
  value: path/to/startup.csproj
- name: BUILDER_IMAGE
  description: s2i builder image used for the Openshift build process. Choose one from the list or ask the Service Factory for other possibilities. 
  value: openjdk18-openshift|dotnet-21-rhel7 (deprecated)|dotnet-31-rhel7|nodejs-10|nginx-114|...
apiVersion: v1
kind: Template
metadata:
  name: ${NAME}
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}${ENV}
    labels:
      app: ${APP}
      component: ${NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}${ENV}
    labels:
      app: ${APP}
      component: ${NAME}
  spec:
    failedBuildsHistoryLimit: 2
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit: {}
    completionDeadlineSeconds: 600
    resources:
      limits:
        cpu: 250m
        memory: 512Mi
      requests:
        cpu: 10m
        memory: 25Mi
    runPolicy: Serial
    source:
      git:
        ref: "master"
        uri: ${GITURI}
      sourceSecret:
        name: digipolisgent-ci
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: MAVEN_ARGS
          valueFrom:
            configMapKeyRef:
              key: MAVEN_ARGS
              name: dg-build-configmap
        - name: NEXUS_USER
          valueFrom:
            secretKeyRef: 
              name: dg-build-secrets
              key: NEXUS_USER
        - name: NEXUS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dg-build-secrets
              key: NEXUS_PASSWORD
        - name: DOTNET_RESTORE_SOURCES
          valueFrom:
            configMapKeyRef:
              key: DOTNET_RESTORE_SOURCES
              name: dg-build-configmap
        - name: NEXUS_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: dg-build-secrets
              key: NEXUS_CREDENTIALS
        - name: DOTNET_STARTUP_PROJECT
          value: ${DOTNET_STARTUP_PROJECT}
        from:
          kind: ImageStreamTag
          name: ${BUILDER_IMAGE}:latest
        pullSecret:
          name: imagestreamsecret
      type: Source
    successfulBuildsHistoryLimit: 2
    triggers: []
